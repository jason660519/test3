# 工作流程名稱：發布套件到 Github Packages
name: Publish to Github Packages

# 觸發條件：當程式碼推送到 main 分支時執行
on:
  push:
    branches: [main]

jobs:
  # 第一個任務：建置和打包
  build_and_package:
    runs-on: ubuntu-latest # 在 Ubuntu 環境下運行
    steps:
      # 步驟1：檢出程式碼
      - name: Checkout Code
        uses: actions/checkout@v4

      # 步驟2：設置 Node.js 環境
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # 使用 Node.js 20 版本

      # 步驟3：安裝專案依賴
      - name: Install Dependencies
        run: npm install

      # 步驟4：建置專案
      - name: Build Package
        run: npm run build

      # 步驟5：打包應用程式
      - name: Package the app
        run: npm pack # 創建 .tgz 檔案

      # 步驟6：儲存打包後的檔案作為工作流程產物
      - name: Package the App
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: "*.tgz"

  # 第二個任務：發布
  publish:
    runs-on: ubuntu-latest
    permissions: # 設置權限
      contents: read
      packages: write
    needs: [build_and_package] # 需要等待 build_and_package 任務完成
    steps:
      # 新增：檢出程式碼
      - name: Checkout Code
        uses: actions/checkout@v4

      # 步驟1：下載先前儲存的包檔案
      - name: Download Package
        uses: actions/download-artifact@v2
        with:
          name: package

      # 步驟2：設置 Node.js 環境和 npm 註冊表
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://npm.pkg.github.com"
          scope: "@jason660519"

      # 步驟3：修正 .npmrc 設置
      - run: |
          echo "@jason660519:registry=https://npm.pkg.github.com" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc
      # 步驟4：發布套件
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
